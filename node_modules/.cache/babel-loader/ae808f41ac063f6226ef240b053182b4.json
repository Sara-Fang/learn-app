{"ast":null,"code":"import _objectWithoutProperties from \"/Users/siyifang/Desktop/learn-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/siyifang/Desktop/learn-app/src/component/login.jsx\";\nimport React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport class RouteGuard extends Component {\n  render() {\n    const _this$props = this.props,\n          Component = _this$props.component,\n          otherProps = _objectWithoutProperties(_this$props, [\"component\"]);\n\n    return React.createElement(Route, Object.assign({}, otherProps, {\n      render: props => auth.isLogin ? React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 11\n        },\n        __self: this\n      })) : React.createElement(Redirect, {\n        to: {\n          pathname: \"/login\",\n          state: {\n            from: props.location.pathname\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }));\n  }\n\n} //here you can write request to backend and change login State\n\nconst auth = {\n  isLogin: false,\n\n  login(callback) {\n    this.isLogin = true;\n    setTimeout(callback, 1000);\n  }\n\n};\nexport class Login extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      isLogin: false\n    };\n\n    this.login = () => {\n      auth.login(() => {\n        this.setState({\n          isLogin: true\n        });\n      });\n    };\n  }\n\n  render() {\n    const from = this.props.location.state && this.props.location.state.from || \"/\";\n\n    if (this.state.isLogin) {\n      return React.createElement(Redirect, {\n        to: from,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, \"Please Login Fist!\"), React.createElement(\"button\", {\n      onClick: this.login,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Login\"));\n  }\n\n}","map":{"version":3,"sources":["/Users/siyifang/Desktop/learn-app/src/component/login.jsx"],"names":["React","Component","Route","Redirect","RouteGuard","render","props","component","otherProps","auth","isLogin","pathname","state","from","location","login","callback","setTimeout","Login","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAO,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AACxCI,EAAAA,MAAM,GAAG;AAAA,wBACyC,KAAKC,KAD9C;AAAA,UACYL,SADZ,eACCM,SADD;AAAA,UAC0BC,UAD1B;;AAEP,WACE,oBAAC,KAAD,oBACMA,UADN;AAEE,MAAA,MAAM,EAAEF,KAAK,IACXG,IAAI,CAACC,OAAL,GACE,oBAAC,SAAD,oBAAeJ,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,GAGE,oBAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFK,UAAAA,QAAQ,EAAE,QADR;AAEFC,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEP,KAAK,CAACQ,QAAN,CAAeH;AAAvB;AAFL,SADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAiBD;;AApBuC,C,CAuB1C;;AACA,MAAMF,IAAI,GAAG;AACXC,EAAAA,OAAO,EAAE,KADE;;AAEXK,EAAAA,KAAK,CAACC,QAAD,EAAW;AACd,SAAKN,OAAL,GAAe,IAAf;AACAO,IAAAA,UAAU,CAACD,QAAD,EAAW,IAAX,CAAV;AACD;;AALU,CAAb;AAOA,OAAO,MAAME,KAAN,SAAoBjB,SAApB,CAA8B;AAAA;AAAA;AAAA,SACnCW,KADmC,GAC3B;AACNF,MAAAA,OAAO,EAAE;AADH,KAD2B;;AAAA,SAInCK,KAJmC,GAI3B,MAAM;AACZN,MAAAA,IAAI,CAACM,KAAL,CAAW,MAAM;AACf,aAAKI,QAAL,CAAc;AACZT,UAAAA,OAAO,EAAE;AADG,SAAd;AAGD,OAJD;AAKD,KAVkC;AAAA;;AAWnCL,EAAAA,MAAM,GAAG;AACP,UAAMQ,IAAI,GACP,KAAKP,KAAL,CAAWQ,QAAX,CAAoBF,KAApB,IAA6B,KAAKN,KAAL,CAAWQ,QAAX,CAAoBF,KAApB,CAA0BC,IAAxD,IAAiE,GADnE;;AAEA,QAAI,KAAKD,KAAL,CAAWF,OAAf,EAAwB;AACtB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAEG,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;;AACD,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,EAEE;AAAQ,MAAA,OAAO,EAAE,KAAKE,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFF,CADF;AAMD;;AAvBkC","sourcesContent":["import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nexport class RouteGuard extends Component {\n  render() {\n    const { component: Component, ...otherProps } = this.props;\n    return (\n      <Route\n        {...otherProps}\n        render={props =>\n          auth.isLogin ? (\n            <Component {...props}></Component>\n          ) : (\n            <Redirect\n              to={{\n                pathname: \"/login\",\n                state: { from: props.location.pathname }\n              }}\n            ></Redirect>\n          )\n        }\n      ></Route>\n    );\n  }\n}\n\n//here you can write request to backend and change login State\nconst auth = {\n  isLogin: false,\n  login(callback) {\n    this.isLogin = true;\n    setTimeout(callback, 1000);\n  }\n};\nexport class Login extends Component {\n  state = {\n    isLogin: false\n  };\n  login = () => {\n    auth.login(() => {\n      this.setState({\n        isLogin: true\n      });\n    });\n  };\n  render() {\n    const from =\n      (this.props.location.state && this.props.location.state.from) || \"/\";\n    if (this.state.isLogin) {\n      return <Redirect to={from}></Redirect>;\n    }\n    return (\n      <div>\n        <p>Please Login Fist!</p>\n        <button onClick={this.login}>Login</button>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}